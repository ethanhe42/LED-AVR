
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000031e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000035  00000000  00000000  0000033e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000005c4  00000000  00000000  00000373  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000013d  00000000  00000000  00000937  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000004cb  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000f40  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000cc  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000049e  00000000  00000000  0000104c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  000014ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ec       	ldi	r30, 0xCA	; 202
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  b6:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <LED_Init>:
#define LED_CS PC5
#define PB_MASK 0xFF

void LED_Init()
{
    PORTB = PB_MASK;
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	88 bb       	out	0x18, r24	; 24
    DDRB = PB_MASK;
  c2:	87 bb       	out	0x17, r24	; 23
    PORTC |= _BV(LED_CS);
  c4:	ad 9a       	sbi	0x15, 5	; 21
    DDRC |= _BV(LED_CS);
  c6:	a5 9a       	sbi	0x14, 5	; 20
}
  c8:	08 95       	ret

000000ca <textbook>:

void textbook(){
   int i;
    uint8_t led_sel;
    LED_Init();
  ca:	0e 94 5f 00 	call	0xbe	; 0xbe <LED_Init>
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	41 e0       	ldi	r20, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d4:	68 ec       	ldi	r22, 0xC8	; 200
  d6:	70 e0       	ldi	r23, 0x00	; 0
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
			PORTB |= PB_MASK;
  d8:	5f ef       	ldi	r21, 0xFF	; 255
  da:	10 c0       	rjmp	.+32     	; 0xfc <textbook+0x32>

    while (1) {
		i = 0;
		led_sel = 0x01;
		while (i < 3)  {
			PORTB = ~led_sel;
  dc:	84 2f       	mov	r24, r20
  de:	80 95       	com	r24
  e0:	88 bb       	out	0x18, r24	; 24
  e2:	88 eb       	ldi	r24, 0xB8	; 184
  e4:	9b e0       	ldi	r25, 0x0B	; 11
  e6:	fb 01       	movw	r30, r22
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <textbook+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ee:	d9 f7       	brne	.-10     	; 0xe6 <textbook+0x1c>
			_delay_ms(300);
			if (led_sel == 0x80) {
  f0:	40 38       	cpi	r20, 0x80	; 128
  f2:	19 f4       	brne	.+6      	; 0xfa <textbook+0x30>
				led_sel = 0x01;
				++i;
  f4:	2f 5f       	subi	r18, 0xFF	; 255
  f6:	3f 4f       	sbci	r19, 0xFF	; 255
  f8:	36 c0       	rjmp	.+108    	; 0x166 <textbook+0x9c>
			}
			else
				led_sel *= 2;
  fa:	44 0f       	add	r20, r20
    LED_Init();

    while (1) {
		i = 0;
		led_sel = 0x01;
		while (i < 3)  {
  fc:	23 30       	cpi	r18, 0x03	; 3
  fe:	31 05       	cpc	r19, r1
 100:	6c f3       	brlt	.-38     	; 0xdc <textbook+0x12>
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e8       	ldi	r20, 0x80	; 128
				led_sel *= 2;
		}
		i = 0;
		led_sel = 0x80;
		while (i < 3) {
			PORTB = ~led_sel;
 108:	84 2f       	mov	r24, r20
 10a:	80 95       	com	r24
 10c:	88 bb       	out	0x18, r24	; 24
 10e:	88 eb       	ldi	r24, 0xB8	; 184
 110:	9b e0       	ldi	r25, 0x0B	; 11
 112:	fb 01       	movw	r30, r22
 114:	31 97       	sbiw	r30, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <textbook+0x4a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 118:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 11a:	d9 f7       	brne	.-10     	; 0x112 <textbook+0x48>
			_delay_ms(300);
			if (led_sel == 0x01) {
 11c:	41 30       	cpi	r20, 0x01	; 1
 11e:	21 f4       	brne	.+8      	; 0x128 <textbook+0x5e>
				led_sel = 0x80;
			    ++i;
 120:	2f 5f       	subi	r18, 0xFF	; 255
 122:	3f 4f       	sbci	r19, 0xFF	; 255
 124:	40 e8       	ldi	r20, 0x80	; 128
 126:	01 c0       	rjmp	.+2      	; 0x12a <textbook+0x60>
			}
			else
				led_sel /= 2;
 128:	46 95       	lsr	r20
			else
				led_sel *= 2;
		}
		i = 0;
		led_sel = 0x80;
		while (i < 3) {
 12a:	23 30       	cpi	r18, 0x03	; 3
 12c:	31 05       	cpc	r19, r1
 12e:	64 f3       	brlt	.-40     	; 0x108 <textbook+0x3e>
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
			PORTB |= PB_MASK;
 134:	88 b3       	in	r24, 0x18	; 24
 136:	58 bb       	out	0x18, r21	; 24
 138:	88 e8       	ldi	r24, 0x88	; 136
 13a:	93 e1       	ldi	r25, 0x13	; 19
 13c:	fb 01       	movw	r30, r22
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <textbook+0x74>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 142:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 144:	d9 f7       	brne	.-10     	; 0x13c <textbook+0x72>
			_delay_ms(500);
			PORTB &= ~PB_MASK;
 146:	88 b3       	in	r24, 0x18	; 24
 148:	18 ba       	out	0x18, r1	; 24
 14a:	88 e8       	ldi	r24, 0x88	; 136
 14c:	93 e1       	ldi	r25, 0x13	; 19
 14e:	fb 01       	movw	r30, r22
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <textbook+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 154:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 156:	d9 f7       	brne	.-10     	; 0x14e <textbook+0x84>
			    ++i;
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
 158:	2f 5f       	subi	r18, 0xFF	; 255
 15a:	3f 4f       	sbci	r19, 0xFF	; 255
 15c:	23 30       	cpi	r18, 0x03	; 3
 15e:	31 05       	cpc	r19, r1
 160:	49 f7       	brne	.-46     	; 0x134 <textbook+0x6a>
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	c9 cf       	rjmp	.-110    	; 0xfc <textbook+0x32>

0000016a <main>:
}



int main()
{
 16a:	df 92       	push	r13
 16c:	ef 92       	push	r14
 16e:	ff 92       	push	r15
 170:	0f 93       	push	r16
 172:	1f 93       	push	r17
 if (0) {textbook; return;}
 int i;
    uint8_t led_sel;
    LED_Init();
 174:	0e 94 5f 00 	call	0xbe	; 0xbe <LED_Init>
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	41 e0       	ldi	r20, 0x01	; 1
 17e:	68 ec       	ldi	r22, 0xC8	; 200
 180:	70 e0       	ldi	r23, 0x00	; 0
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
			PORTB |= PB_MASK;
 182:	ee 24       	eor	r14, r14
 184:	ea 94       	dec	r14
			PORTB &= ~PB_MASK;
			_delay_ms(500);
		}
		i=0;
		while (i < 5) {
			PORTB =0x11;
 186:	91 e1       	ldi	r25, 0x11	; 17
 188:	d9 2e       	mov	r13, r25
            _delay_ms(1000);
			PORTB =0x22;
 18a:	82 e2       	ldi	r24, 0x22	; 34
 18c:	f8 2e       	mov	r15, r24
            _delay_ms(1000);
			PORTB =0x44;
 18e:	14 e4       	ldi	r17, 0x44	; 68
            _delay_ms(1000);
            PORTB =0x88;
 190:	08 e8       	ldi	r16, 0x88	; 136
			_delay_ms(1000);
	    	++i;
			}
        i=0;
		while (i < 5) {
			PORTB =0xEE;
 192:	be ee       	ldi	r27, 0xEE	; 238
            _delay_ms(1000);
			PORTB =0xDD;
 194:	5d ed       	ldi	r21, 0xDD	; 221
            _delay_ms(1000);
			PORTB =0xBB;
 196:	ab eb       	ldi	r26, 0xBB	; 187
 198:	10 c0       	rjmp	.+32     	; 0x1ba <main+0x50>

    while (1) {
		i = 0;
		led_sel = 0x01;
		while (i < 3)  {
			PORTB = ~led_sel;
 19a:	84 2f       	mov	r24, r20
 19c:	80 95       	com	r24
 19e:	88 bb       	out	0x18, r24	; 24
 1a0:	88 eb       	ldi	r24, 0xB8	; 184
 1a2:	9b e0       	ldi	r25, 0x0B	; 11
 1a4:	fb 01       	movw	r30, r22
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x3c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1aa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ac:	d9 f7       	brne	.-10     	; 0x1a4 <main+0x3a>
			_delay_ms(300);
  			if (led_sel == 0x80) {
 1ae:	40 38       	cpi	r20, 0x80	; 128
 1b0:	19 f4       	brne	.+6      	; 0x1b8 <main+0x4e>
				led_sel = 0x01;
				++i;
 1b2:	2f 5f       	subi	r18, 0xFF	; 255
 1b4:	3f 4f       	sbci	r19, 0xFF	; 255
 1b6:	85 c0       	rjmp	.+266    	; 0x2c2 <main+0x158>
			}
			else
				led_sel *= 2;
 1b8:	44 0f       	add	r20, r20
    LED_Init();

    while (1) {
		i = 0;
		led_sel = 0x01;
		while (i < 3)  {
 1ba:	23 30       	cpi	r18, 0x03	; 3
 1bc:	31 05       	cpc	r19, r1
 1be:	6c f3       	brlt	.-38     	; 0x19a <main+0x30>
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	40 e8       	ldi	r20, 0x80	; 128
				led_sel *= 2;
		}
		i = 0;
		led_sel = 0x80;
		while (i < 3) {
			PORTB = ~led_sel;
 1c6:	84 2f       	mov	r24, r20
 1c8:	80 95       	com	r24
 1ca:	88 bb       	out	0x18, r24	; 24
 1cc:	88 eb       	ldi	r24, 0xB8	; 184
 1ce:	9b e0       	ldi	r25, 0x0B	; 11
 1d0:	fb 01       	movw	r30, r22
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <main+0x68>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1d6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1d8:	d9 f7       	brne	.-10     	; 0x1d0 <main+0x66>
			_delay_ms(300);
			if (led_sel == 0x01) {
 1da:	41 30       	cpi	r20, 0x01	; 1
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <main+0x7c>
				led_sel = 0x80;
			    ++i;
 1de:	2f 5f       	subi	r18, 0xFF	; 255
 1e0:	3f 4f       	sbci	r19, 0xFF	; 255
 1e2:	40 e8       	ldi	r20, 0x80	; 128
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <main+0x7e>
			}
			else
				led_sel /= 2;
 1e6:	46 95       	lsr	r20
			else
				led_sel *= 2;
		}
		i = 0;
		led_sel = 0x80;
		while (i < 3) {
 1e8:	23 30       	cpi	r18, 0x03	; 3
 1ea:	31 05       	cpc	r19, r1
 1ec:	64 f3       	brlt	.-40     	; 0x1c6 <main+0x5c>
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	30 e0       	ldi	r19, 0x00	; 0
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
			PORTB |= PB_MASK;
 1f2:	88 b3       	in	r24, 0x18	; 24
 1f4:	e8 ba       	out	0x18, r14	; 24
 1f6:	88 e8       	ldi	r24, 0x88	; 136
 1f8:	93 e1       	ldi	r25, 0x13	; 19
 1fa:	fb 01       	movw	r30, r22
 1fc:	31 97       	sbiw	r30, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <main+0x92>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 200:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 202:	d9 f7       	brne	.-10     	; 0x1fa <main+0x90>
			_delay_ms(500);
			PORTB &= ~PB_MASK;
 204:	88 b3       	in	r24, 0x18	; 24
 206:	18 ba       	out	0x18, r1	; 24
 208:	88 e8       	ldi	r24, 0x88	; 136
 20a:	93 e1       	ldi	r25, 0x13	; 19
 20c:	fb 01       	movw	r30, r22
 20e:	31 97       	sbiw	r30, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <main+0xa4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 212:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 214:	d9 f7       	brne	.-10     	; 0x20c <main+0xa2>
			    ++i;
			}
			else
				led_sel /= 2;
		}
		for  (i = 0; i < 3; ++i) {
 216:	2f 5f       	subi	r18, 0xFF	; 255
 218:	3f 4f       	sbci	r19, 0xFF	; 255
 21a:	23 30       	cpi	r18, 0x03	; 3
 21c:	31 05       	cpc	r19, r1
 21e:	49 f7       	brne	.-46     	; 0x1f2 <main+0x88>
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
			PORTB &= ~PB_MASK;
			_delay_ms(500);
		}
		i=0;
		while (i < 5) {
			PORTB =0x11;
 224:	d8 ba       	out	0x18, r13	; 24
 226:	80 e1       	ldi	r24, 0x10	; 16
 228:	97 e2       	ldi	r25, 0x27	; 39
 22a:	fb 01       	movw	r30, r22
 22c:	31 97       	sbiw	r30, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <main+0xc2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 230:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 232:	d9 f7       	brne	.-10     	; 0x22a <main+0xc0>
            _delay_ms(1000);
			PORTB =0x22;
 234:	f8 ba       	out	0x18, r15	; 24
 236:	80 e1       	ldi	r24, 0x10	; 16
 238:	97 e2       	ldi	r25, 0x27	; 39
 23a:	fb 01       	movw	r30, r22
 23c:	31 97       	sbiw	r30, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <main+0xd2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 240:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 242:	d9 f7       	brne	.-10     	; 0x23a <main+0xd0>
            _delay_ms(1000);
			PORTB =0x44;
 244:	18 bb       	out	0x18, r17	; 24
 246:	80 e1       	ldi	r24, 0x10	; 16
 248:	97 e2       	ldi	r25, 0x27	; 39
 24a:	fb 01       	movw	r30, r22
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <main+0xe2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 250:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 252:	d9 f7       	brne	.-10     	; 0x24a <main+0xe0>
            _delay_ms(1000);
            PORTB =0x88;
 254:	08 bb       	out	0x18, r16	; 24
 256:	80 e1       	ldi	r24, 0x10	; 16
 258:	97 e2       	ldi	r25, 0x27	; 39
 25a:	fb 01       	movw	r30, r22
 25c:	31 97       	sbiw	r30, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <main+0xf2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 260:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 262:	d9 f7       	brne	.-10     	; 0x25a <main+0xf0>
			_delay_ms(1000);
	    	++i;
 264:	2f 5f       	subi	r18, 0xFF	; 255
 266:	3f 4f       	sbci	r19, 0xFF	; 255
			_delay_ms(500);
			PORTB &= ~PB_MASK;
			_delay_ms(500);
		}
		i=0;
		while (i < 5) {
 268:	25 30       	cpi	r18, 0x05	; 5
 26a:	31 05       	cpc	r19, r1
 26c:	d9 f6       	brne	.-74     	; 0x224 <main+0xba>
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
            _delay_ms(1000);
			PORTB =0xDD;
            _delay_ms(1000);
			PORTB =0xBB;
            _delay_ms(1000);
            PORTB =0x77;
 272:	47 e7       	ldi	r20, 0x77	; 119
			_delay_ms(1000);
	    	++i;
			}
        i=0;
		while (i < 5) {
			PORTB =0xEE;
 274:	b8 bb       	out	0x18, r27	; 24
 276:	80 e1       	ldi	r24, 0x10	; 16
 278:	97 e2       	ldi	r25, 0x27	; 39
 27a:	fb 01       	movw	r30, r22
 27c:	31 97       	sbiw	r30, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <main+0x112>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 280:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 282:	d9 f7       	brne	.-10     	; 0x27a <main+0x110>
            _delay_ms(1000);
			PORTB =0xDD;
 284:	58 bb       	out	0x18, r21	; 24
 286:	80 e1       	ldi	r24, 0x10	; 16
 288:	97 e2       	ldi	r25, 0x27	; 39
 28a:	fb 01       	movw	r30, r22
 28c:	31 97       	sbiw	r30, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <main+0x122>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 290:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 292:	d9 f7       	brne	.-10     	; 0x28a <main+0x120>
            _delay_ms(1000);
			PORTB =0xBB;
 294:	a8 bb       	out	0x18, r26	; 24
 296:	80 e1       	ldi	r24, 0x10	; 16
 298:	97 e2       	ldi	r25, 0x27	; 39
 29a:	fb 01       	movw	r30, r22
 29c:	31 97       	sbiw	r30, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <main+0x132>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2a0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2a2:	d9 f7       	brne	.-10     	; 0x29a <main+0x130>
            _delay_ms(1000);
            PORTB =0x77;
 2a4:	48 bb       	out	0x18, r20	; 24
 2a6:	80 e1       	ldi	r24, 0x10	; 16
 2a8:	97 e2       	ldi	r25, 0x27	; 39
 2aa:	fb 01       	movw	r30, r22
 2ac:	31 97       	sbiw	r30, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <main+0x142>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2b0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2b2:	d9 f7       	brne	.-10     	; 0x2aa <main+0x140>
			_delay_ms(1000);
			++i;
 2b4:	2f 5f       	subi	r18, 0xFF	; 255
 2b6:	3f 4f       	sbci	r19, 0xFF	; 255
            PORTB =0x88;
			_delay_ms(1000);
	    	++i;
			}
        i=0;
		while (i < 5) {
 2b8:	25 30       	cpi	r18, 0x05	; 5
 2ba:	31 05       	cpc	r19, r1
 2bc:	d9 f6       	brne	.-74     	; 0x274 <main+0x10a>
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	7a cf       	rjmp	.-268    	; 0x1ba <main+0x50>

000002c6 <_exit>:
 2c6:	f8 94       	cli

000002c8 <__stop_program>:
 2c8:	ff cf       	rjmp	.-2      	; 0x2c8 <__stop_program>
